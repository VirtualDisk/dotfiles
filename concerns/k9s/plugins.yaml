# Move to $XDG_CONFIG_HOME/k9s/
plugins:
  watch-events:
    shortCut: Shift-E
    confirm: false
    description: Get Events
    scopes:
      - all
    command: sh
    background: false
    args:
      - -c
      - "kubectl events --context $CONTEXT --namespace $NAMESPACE --for $RESOURCE_NAME.${RESOURCE_GROUP:+.RESOURCE_GROUP}/$NAME --watch"
  vm-ssh:
    shortCut: Shift-S
    description: SSH
    command: virtctl
    scopes:
      - virtualmachines
      - virtualmachineinstances
    args:
      - ssh
      - zc2user@vmi/$NAME
      - --namespace=$NAMESPACE
  argocd:
    shortCut: "s"
    description: Sync ArgoCD Application
    scopes:
      - application
    command: argocd
    args:
      - app
      - sync
      - $NAME
      - --app-namespace
      - $NAMESPACE
      - --core
    background: true
    confirm: true

  refresh-apps:
    shortCut: Shift-R
    confirm: false
    scopes:
      - apps
    description: Refresh a argocd app hard
    command: bash
    background: false
    args:
      - -c
      - "kubectl annotate applications -n argocd $NAME argocd.argoproj.io/refresh=hard"

  disable-auto-sync:
    shortCut: Shift-J
    confirm: false
    scopes:
      - apps
    description: Disable argocd sync
    command: kubectl
    background: false
    args:
      - patch
      - applications
      - -n
      - argocd
      - $NAME
      - "--type=json"
      - '-p=[{"op":"replace", "path": "/spec/syncPolicy", "value": {}}]'

  enable-auto-sync:
    shortCut: Shift-B
    confirm: false
    scopes:
      - apps
    description: Enable argocd sync
    command: kubectl
    background: false
    args:
      - patch
      - applications
      - -n
      - argocd
      - $NAME
      - --type=merge
      - '-p={"spec":{"syncPolicy":{"automated":{"prune":true,"selfHeal":true},"syncOptions":["ApplyOutOfSyncOnly=true","CreateNamespace=true","PruneLast=true","PrunePropagationPolicy=foreground"]}}}'

  ## cnpg
  cnpg-backup:
    shortCut: b
    description: Backup
    scopes:
      - clusters
    command: bash
    confirm: true
    background: false
    args:
      - -c
      - 'kubectl cnpg backup $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-hibernate-status:
    shortCut: h
    description: Hibernate status
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg hibernate status $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-hibernate:
    shortCut: Shift-H
    description: Hibernate
    confirm: true
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg hibernate on $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-hibernate-off:
    shortCut: Shift-H
    description: Wake up hibernated cluster in this namespace
    confirm: true
    scopes:
      - namespace
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg hibernate off $NAME -n $NAME --context "$CONTEXT" |& less -R'
  cnpg-logs:
    shortCut: l
    description: Logs
    scopes:
      - clusterss
    command: bash
    background: false
    args:
      - -c
      - "kubectl cnpg logs cluster $NAME -f -n $NAMESPACE --context $CONTEXT"
  cnpg-psql:
    shortCut: p
    description: PSQL shell
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - "kubectl cnpg psql $NAME -n $NAMESPACE --context $CONTEXT"
  cnpg-reload:
    shortCut: r
    description: Reload
    confirm: true
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg reload $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-restart:
    shortCut: Shift-R
    description: Restart
    confirm: true
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg restart $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-status:
    shortCut: s
    description: Status
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg status $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-status-verbose:
    shortCut: Shift-S
    description: Status (verbose)
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg status $NAME -n $NAMESPACE --context "$CONTEXT" --verbose |& less -R'
  ## krr
  krr-ns:
    shortCut: Shift-K
    description: Get krr
    scopes:
      - namespaces
    command: bash
    background: false
    confirm: false
    args:
      - -c
      - |
        krr simple -p "${PROMETHEUS_URL:-http://localhost:9090}" --cluster $CONTEXT -n $RESOURCE_NAME
        echo "Press 'q' to exit"
        while : ; do
        read -n 1 k <&1
        if [[ $k = q ]] ; then
        break
        fi
        done

  krr:
    shortCut: Shift-K
    description: Get krr
    scopes:
      - deployments
      - daemonsets
      - statefulsets
      - cronjobs
    command: bash
    background: false
    confirm: false
    args:
      - -c
      - |
        LABELS=$(kubectl get $RESOURCE_NAME $NAME -n $NAMESPACE  --context $CONTEXT  --show-labels | awk '{print $NF}' | awk '{if(NR>1)print}')
        krr simple -p "${PROMETHEUS_URL:-http://localhost:9090}" --cluster $CONTEXT --selector $LABELS 
        echo "Press 'q' to exit"
        while : ; do
        read -n 1 k <&1
        if [[ $k = q ]] ; then
        break
        fi
        done

  talos-dashboard:
    shortCut: Shift-D
    description: Talos dashboard for node
    dangerous: false
    scopes:
      - nodes
    command: bash
    background: false
    confirm: false
    args:
      - -c
      - |
        talosctl dashboard -n $NAME --context $CONTEXT

  talos-shutdown:
    shortCut: Shift-S
    description: Talos shutdown node
    dangerous: true
    scopes:
      - nodes
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - |
        talosctl shutdown -n $NAME --context $CONTEXT --wait=true

  talos-reboot:
    shortCut: Shift-V
    description: Talos reboot node
    dangerous: true
    scopes:
      - nodes
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - |
        talosctl reboot -n $NAME --context $CONTEXT --wait=true

  talos-reset:
    shortCut: Shift-T
    description: Talos reset node
    dangerous: true
    scopes:
      - nodes
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - |
        talosctl reset -n $NAME --context $CONTEXT --reboot=false --wait=false

  node-ssm:
    shortCut: Ctrl-S
    confirm: false
    description: SSM into node
    scopes:
      - nodes
    background: false
    command: ssmconnect
    args:
      - $NAME

  greenhouse-grafana-pod:
    shortCut: Ctrl-L
    confirm: false
    description: Grafana dashboard
    scopes:
      - pods
    background: true
    command: open
    args:
      - https://grafana.$CONTEXT.gh.team/d/6581e46e4e5c7ba40a07646395ef7b23/kubernetes-compute-resources-pod?orgId=1&from=now-6h&to=now&timezone=utc&var-datasource=default&var-cluster=&var-namespace=$NAMESPACE&var-pod=$NAME&refresh=10s

  greenhouse-grafana-node:
    shortCut: Ctrl-L
    confirm: false
    description: Grafana dashboard
    scopes:
      - nodes
    background: true
    command: open
    args:
      - https://grafana.$CONTEXT.gh.team/d/200ac8fdbfbb74b39aff88118e4d1c2c/kubernetes-compute-resources-node-pods?orgId=1&from=now-6h&to=now&timezone=utc&var-datasource=default&var-cluster=&var-node=$NAME&refresh=10s

  debug:
    shortCut: Shift-D
    description: Add debug container
    dangerous: true
    scopes:
      - containers
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - "kubectl --kubeconfig=$KUBECONFIG debug -it --context $CONTEXT -n=$NAMESPACE $POD --target=$NAME --image=docker.io/nicolaka/netshoot:v0.13 --share-processes -- bash"
