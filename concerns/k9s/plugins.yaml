# Move to $XDG_CONFIG_HOME/k9s/
plugins:
  sync-apps:
    shortCut: Shift-S
    confirm: false
    scopes:
      - apps
    description: Sync a argocd apps
    command: bash
    background: false
    args:
      - -c
      - "argocd app sync $NAME"
  automated-sync-apps:
    shortCut: Shift-O
    confirm: true
    scopes:
      - apps
    description: Auto syncPolicy app (automated or none)
    command: bash
    background: false
    args:
      - -c
      - "argocd app set $NAME --sync-policy automated"
  none-sync-apps:
    shortCut: Ctrl-O
    confirm: true
    scopes:
      - apps
    description: Auto syncPolicy app (automated or none)
    command: bash
    background: false
    args:
      - -c
      - "argocd app set $NAME --sync-policy none"

  blame:
    shortCut: b
    confirm: false
    description: "Blame"
    scopes:
      - all
    command: sh
    background: false
    args:
      - -c
      - "kubectl-blame $RESOURCE_NAME $NAME -n $NAMESPACE --context $CONTEXT | less"

  ## cnpg
  cnpg-backup:
    shortCut: b
    description: Backup
    scopes:
      - clusters
    command: bash
    confirm: true
    background: false
    args:
      - -c
      - 'kubectl cnpg backup $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-hibernate-status:
    shortCut: h
    description: Hibernate status
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg hibernate status $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-hibernate:
    shortCut: Shift-H
    description: Hibernate
    confirm: true
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg hibernate on $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-hibernate-off:
    shortCut: Shift-H
    description: Wake up hibernated cluster in this namespace
    confirm: true
    scopes:
      - namespace
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg hibernate off $NAME -n $NAME --context "$CONTEXT" |& less -R'
  cnpg-logs:
    shortCut: l
    description: Logs
    scopes:
      - clusterss
    command: bash
    background: false
    args:
      - -c
      - "kubectl cnpg logs cluster $NAME -f -n $NAMESPACE --context $CONTEXT"
  cnpg-psql:
    shortCut: p
    description: PSQL shell
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - "kubectl cnpg psql $NAME -n $NAMESPACE --context $CONTEXT"
  cnpg-reload:
    shortCut: r
    description: Reload
    confirm: true
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg reload $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-restart:
    shortCut: Shift-R
    description: Restart
    confirm: true
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg restart $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-status:
    shortCut: s
    description: Status
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg status $NAME -n $NAMESPACE --context "$CONTEXT" |& less -R'
  cnpg-status-verbose:
    shortCut: Shift-S
    description: Status (verbose)
    scopes:
      - clusters
    command: bash
    background: false
    args:
      - -c
      - 'kubectl cnpg status $NAME -n $NAMESPACE --context "$CONTEXT" --verbose |& less -R'
  ## krr
  krr:
    shortCut: Shift-K
    description: Get krr
    scopes:
      - deployments
      - daemonsets
      - statefulsets
    command: bash
    background: false
    confirm: false
    args:
      - -c
      - |
        LABELS=$(kubectl get $RESOURCE_NAME $NAME -n $NAMESPACE  --context $CONTEXT  --show-labels | awk '{print $NF}' | awk '{if(NR>1)print}')
        krr simple --cluster $CONTEXT --selector $LABELS 
        echo "Press 'q' to exit"
        while : ; do
        read -n 1 k <&1
        if [[ $k = q ]] ; then
        break
        fi
        done

  talos-dashboard:
    shortCut: Shift-D
    description: Talos dashboard for node
    dangerous: false
    scopes:
      - nodes
    command: bash
    background: false
    confirm: false
    args:
      - -c
      - |
        talosctl dashboard -n $NAME --context $CONTEXT

  talos-shutdown:
    shortCut: Shift-S
    description: Talos shutdown node
    dangerous: true
    scopes:
      - nodes
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - |
        talosctl shutdown -n $NAME --context $CONTEXT --wait=true

  talos-reboot:
    shortCut: Shift-V
    description: Talos reboot node
    dangerous: true
    scopes:
      - nodes
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - |
        talosctl reboot -n $NAME --context $CONTEXT --wait=true

  talos-reset:
    shortCut: Shift-T
    description: Talos reset node
    dangerous: true
    scopes:
      - nodes
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - |
        talosctl reset -n $NAME --context $CONTEXT --reboot=true --wait=false

  node-root-shell:
    shortCut: a
    description: Run root shell on node
    dangerous: true
    scopes:
      - nodes
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - |
        host="$1"
        json='
        {
          "apiVersion": "v1",
          "spec": {
            "hostIPC": true,
            "hostNetwork": true,
            "hostPID": true
        '
        if ! [[ -z "$host" ]]; then
          json+=",
          \"nodeSelector\" : {
            \"kubernetes.io/hostname\" : \"$host\"
          }
          ";
        fi
        json+='
          }
        }
        '
        kubectl run -ti --image alpine:3.8 --rm --privileged --restart=Never --overrides="$json" root --command -- nsenter -t 1 -m -u -n -i -- bash -l
