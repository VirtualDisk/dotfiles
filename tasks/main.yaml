- name: tap krr brew repo
  when: ansible_os_family == 'Darwin'
  community.general.homebrew_tap:
    name: robusta-dev/homebrew-krr

- name: install and update brew
  when: ansible_os_family == 'Darwin'
  community.general.homebrew:
    name: "{{ pkgs_mac }}"
    state: present
    update_homebrew: true
    upgrade_all: true

- name: install brew casks
  when: ansible_os_family == 'Darwin'
  community.general.homebrew_cask:
    name: "{{ casks }}"
    state: present

# - name: install snap pkgs
#   when: ansible_os_family == 'Debian'
#   community.general.snap:
#     name: "{{ pkgs_snap }}"
#     classic: true
#   become: true

- name: update apt pkgs
  when: ansible_os_family == 'Debian'
  ansible.builtin.apt:
    update_cache: true
  become: true

- name: install gpg
  when: ansible_os_family == 'Debian'
  ansible.builtin.apt:
    name: gpg
    state: present
    update_cache: true
  become: true

- name: install gpg
  when: ansible_os_family == 'RedHat'
  ansible.builtin.dnf:
    name: gpg
    state: present
    update_cache: true
  become: true

- name: install apt pkgs
  when: ansible_os_family == 'Debian'
  ansible.builtin.apt:
    name: "{{ pkgs_debian }}"
    state: latest
    update_cache: true
  become: true

- name: install dnf pkgs
  when: ansible_os_family == 'RedHat'
  ansible.builtin.dnf:
    name: "{{ pkgs_fedora }}"
    state: latest
    update_cache: true
  become: true

- name: create docker group
  when: ansible_os_family == 'RedHat' or
    ansible_os_family == 'Debian'
  ansible.builtin.group:
    name: docker
    state: present
  become: true

- name: add user to docker group
  when: ansible_os_family == 'Redhat' or
    ansible_os_family == 'Debian'
  ansible.builtin.user:
    name: "{{ theuser }}"
    group: docker
  become: true

- name: enable docker service
  when: ansible_os_family == 'RedHat'
  ansible.builtin.systemd_service:
    state: started
    enabled: true
    name: docker

- name: ensure wheel group exists
  when: ansible_os_family == 'RedHat' or
    ansible_os_family == 'Debian'
  group:
    name: wheel
    state: present
  become: true

- name: Allow 'wheel' group to have passwordless sudo
  when: ansible_os_family == 'RedHat' or
    ansible_os_family == 'Debian'
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^%wheel"
    line: "%wheel ALL=(ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"
  become: true

- name: ensure user exists on linux
  when: ansible_os_family == 'RedHat' or
    ansible_os_family == 'Debian'
  ansible.builtin.user:
    name: "{{ explicit_user }}"
    comment: we out here
    shell: /bin/zsh
    create_home: true
    groups: wheel,docker
    password: "{{ '$6$mysecretsalt$mqF71rPutgHoEx7nTnkwFbjoh3OmRmClb6e3lUTsZm8lIJL1fT33A/9Upvrn5ZLhTUmJzdoxs99BsQlRT5zpZ0' | password_hash('sha512', 'mysecretsalt') }}"
  become: true

- name: clone prezto repo
  ansible.builtin.git:
    repo: https://github.com/sorin-ionescu/prezto.git
    dest: "{{lookup('env','HOME')}}/.zprezto"
    recursive: true
  ignore_errors: true

- name: clone xone repo
  when: ansible_os_family == 'Debian' or
    ansible_os_family == 'RedHat'
  ansible.builtin.git:
    repo: https://github.com/medusalix/xone.git
    dest: "{{lookup('env','HOME')}}/xone"
    recursive: true
  ignore_errors: true

# - name: clone asdf repo
#   ansible.builtin.git:
#     repo: https://github.com/asdf-vm/asdf.git
#     dest: "{{lookup('env','HOME')}}/.asdf"

- name: create Projects directory if it does not exist
  ansible.builtin.file:
    path: "{{lookup('env','HOME')}}/Projects"
    state: directory
    mode: "0755"

- name: create shared directory if it does not exist
  when: ansible_os_family == 'Darwin'
  ansible.builtin.file:
    path: /Users/shared
    state: directory
    mode: "0755"
  become: true

- name: create Screenshots directory if it does not exist
  when: ansible_os_family == 'Darwin'
  ansible.builtin.file:
    path: "{{lookup('env','HOME')}}/Pictures/Screenshots"
    state: directory
    mode: "0755"

- name: create .docker directory if it does not exist
  when: ansible_os_family == 'Darwin'
  ansible.builtin.file:
    path: "{{lookup('env','HOME')}}/.docker"
    state: directory
    mode: "0755"

- name: create Shared directory if it does not exist
  when: ansible_os_family == 'Debian' or
    ansible_os_family == 'RedHat'
  ansible.builtin.file:
    path: /home/shared
    state: directory
    mode: "0755"
  become: true

- name: create config directory if it does not exist
  when: ansible_os_family == 'Debian' or
    ansible_os_family == 'RedHat'
  ansible.builtin.file:
    path: "/home/{{ explicit_user }}/.config"
    state: directory
    mode: "0755"
  become: true

- name: set timezone to EST
  community.general.timezone:
    name: America/New_York
  become: true
  ignore_errors: true

- name: set dark mode on mac
  when: ansible_os_family == 'Darwin'
  community.general.osx_defaults:
    key: NSRequiresAquaSystemAppearance
    type: bool
    value: false
    state: present

- name: VSCode vim key repeat fix on mac
  when: ansible_os_family == 'Darwin'
  community.general.osx_defaults:
    domain: com.microsoft.VSCode
    key: ApplePressAndHoldEnabled
    type: bool
    value: false
    state: present

- name: set screenshot dir on mac
  when: ansible_os_family == 'Darwin'
  community.general.osx_defaults:
    key: com.apple.screencapture
    type: string
    value: "~/Pictures/Screenshots"
    state: present

- name: set approved ssh key
  ansible.posix.authorized_key:
    user: "{{ theuser }}"
    state: present
    key: https://github.com/virtualdisk.keys

- name: copy certificate authority to trusted ca path of the os
  when: ansible_os_family == 'Debian' or
    ansible_os_family == 'RedHat'
  become: true
  copy:
    src: "{{ item }}"
    dest: "/usr/local/share/ca-certificates/"
    owner: root
    group: root
    mode: 0644
  with_fileglob:
    - concerns/root-ca/*
  notify:
    - update trusted ca debian

- name: symlink wallpaper
  when: ansible_os_family == 'Darwin'
  ansible.builtin.file:
    src: "{{ playbook_dir }}/concerns/wallpaper/Nevada.jpg"
    dest: "{{lookup('env','HOME')}}/Pictures/Nevada.jpg"
    owner: "{{ theuser }}"
    state: link

# - name: set default wallpaper on macOS
#   when: ansible_os_family == 'Darwin'
#   ansible.builtin.command:
#     cmd: osascript -e \"{{lookup('env','HOME')}}/Pictures/Nevada.jpg\"

- name: Install Linux Utils
  when: ansible_os_family == 'RedHat' or
    ansible_os_family == 'Debian'
  ansible.builtin.include_tasks:
    file: linux_utils.yaml

- name: Apply Linux Symlinks
  when: ansible_os_family == 'RedHat' or
    ansible_os_family == 'Debian'
  ansible.builtin.include_tasks:
    file: linux_symlinks.yaml

- name: Install Mac Utils
  when: ansible_os_family == 'Darwin'
  ansible.builtin.include_tasks:
    file: mac_utils.yaml

- name: Apply Mac Symlinks
  when: ansible_os_family == 'Darwin'
  ansible.builtin.include_tasks:
    file: mac_symlinks.yaml

- name: Enable WOL
  when: ansible_os_family == 'RedHat' or
    ansible_os_family == 'Debian'
  ansible.builtin.command:
    cmd: /sbin/ethtool -s enp42s0 wol g
  become: true

- name: Reload systemd daemon and enable WOL service
  when: ansible_os_family == 'RedHat' or
    ansible_os_family == 'Debian'
  ansible.builtin.systemd_service:
    name: wol-enable
    state: started
    enabled: true
    daemon_reload: true
  become: true
